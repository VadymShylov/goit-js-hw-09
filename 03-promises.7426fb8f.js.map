{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAASJ,SAASC,cAAc,mBAkCtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,UAAEH,QAAUC,IAEpBG,EAAO,UAAEJ,QAAUC,MAEpBA,MAvCPR,EAAKe,iBAAiB,UAItB,SAA2BC,GAEzBA,EAAMC,iBAEN,IAAIC,EAAQf,EAAagB,cACzB,MAAMC,EAAiBhB,EAAYe,cAC7BE,EAAchB,EAAOc,cAE1B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACtChB,EAAcgB,EAAGJ,GACdK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBJ,QAAUd,UAGlCmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBN,QAAQd,UAGlCU,GAASE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n\n// Form and its inputs\n\nconst form = document.querySelector('.form');\n\nconst firstDelayMs = document.querySelector('[name=\"delay\"]');\nconst delayStepMs = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n// addEventListener after submitting the form\n\nform.addEventListener('submit', subCreatePromises);\n\n//  createPromise after event listener\n\nfunction subCreatePromises(event) {\n\n  event.preventDefault();\n\n  let delay = firstDelayMs.valueAsNumber;\n  const delayStepMsVal = delayStepMs.valueAsNumber;\n  const amountValue = amount.valueAsNumber;\n\n   for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n      });\n    delay += delayStepMsVal;\n  }\n}\n\n//function createPromise\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelayMs","$47d4ff9957288465$var$delayStepMs","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","valueAsNumber","delayStepMsVal","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7426fb8f.js.map"}