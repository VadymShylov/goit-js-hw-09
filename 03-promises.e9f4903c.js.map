{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMMC,EAAOC,SAASC,cAAc,SAE9BC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAASJ,SAASC,cAAc,mBAItCF,EAAKM,iBAAiB,UAItB,SAA2BC,qBA0B3B,IAAuBC,EAAUC,GAAVD,EAjBLE,EAiBeD,EAjBZE,EAkBZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,SAAAA,EAAUC,MAAAA,IAEpBK,EAAO,CAAEN,SAAAA,EAAUC,MAAAA,MAEpBA,OAzBAS,MAAK,SAAAC,GAAWA,EAARX,aAAUC,EAAKU,EAALV,MACjBW,EAAAtB,GAASuB,OAAOC,QACb,uBAAgCC,OAARb,EAAE,QAAYa,OAANd,EAAM,UAG1Ce,OAAM,SAAAL,GAAWA,EAARX,aAAUC,EAAKU,EAALV,MAClBW,EAAAtB,GAASuB,OAAOI,QACb,sBAA6BF,OAARb,EAAE,QAAYa,OAANd,EAAM,UAG1CE,GAASe,GAlBXnB,EAAMoB,iBAML,IAJD,IAAIhB,EAAQR,EAAayB,cACnBF,EAAiBtB,EAAYwB,cAC7BC,EAAcxB,EAAOuB,cAEjBE,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAACC,EAAAD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n\n// Form and its inputs\n\nconst form = document.querySelector('.form');\n\nconst firstDelayMs = document.querySelector('[name=\"delay\"]');\nconst delayStepMs = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n// addEventListener after submitting the form\n\nform.addEventListener('submit', subCreatePromises);\n\n//  createPromise after event listener\n\nfunction subCreatePromises(event) {\n\n  event.preventDefault();\n\n  let delay = firstDelayMs.valueAsNumber;\n  const delayStepMsVal = delayStepMs.valueAsNumber;\n  const amountValue = amount.valueAsNumber;\n\n   for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n      });\n    delay += delayStepMsVal;\n  }\n}\n\n//function createPromise\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayMs","$ce04d3a99e08e73b$var$delayStepMs","$ce04d3a99e08e73b$var$amount","addEventListener","event","position","delay","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","delayStepMsVal","preventDefault","valueAsNumber","amountValue","i1","_loop"],"version":3,"file":"03-promises.e9f4903c.js.map"}